import "std";
import "sys";

func dump_elements[[T]](pvec: *std::vector[[T]]) void {
    var slice: []T = pvec.*.data();
    for i in 0:countof(slice) {
        sys::dump[[T]](slice[i]);
    }
}

func main() void {
    var vec = std::vector[[u8]]::init();
    defer vec.fini();

    let A: u8 = 0xAA;
    let B: u8 = 0xBB;
    let C: u8 = 0xCC;
    let D: u8 = 0xDD;
    let E: u8 = 0xEE;

    # [A]
    vec.insert(0, A);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [A][B]
    vec.insert(1, B);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [C][A][B]
    vec.insert(0, C);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [C][D][A][B]
    vec.insert(1, D);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    #  0  1  2  3  4  5
    # [C][D][A][B][!][E]
    #              ^  ^
    #              |  + Inserting here should cause an error.
    #              + Missing element.
    vec.insert(5, E);
}
################################################################################
# 01 00 00 00 00 00 00 00
# AA
# 02 00 00 00 00 00 00 00
# AA
# BB
# 03 00 00 00 00 00 00 00
# CC
# AA
# BB
# 04 00 00 00 00 00 00 00
# CC
# DD
# AA
# BB
# panic: invalid index
