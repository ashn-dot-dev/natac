import "std";
import "sys";

func dump_elements[[T]](pvec: *std::vector[[T]]) void {
    var slice: []T = pvec.*.data();
    for i in 0:countof(slice) {
        sys::dump[[T]](slice[i]);
    }
}


func main() void {
    var vec = std::vector[[u8]]::init();
    defer vec.fini();

    let A: u8 = 0xAA;
    let B: u8 = 0xBB;
    let C: u8 = 0xCC;
    let D: u8 = 0xDD;
    let E: u8 = 0xEE;


    # [A][B][C][D][E]
    vec.insert(0, A);
    vec.insert(1, B);
    vec.insert(2, C);
    vec.insert(3, D);
    vec.insert(4, E);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [A][B][C][D]
    vec.remove(4);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [A][B][D]
    vec.remove(2);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    # [B][D]
    vec.remove(0);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);

    #  0  1  2
    # [B][D][!]
    #        ^
    #        + Element does no exist. Removing here should cause an error.
    vec.remove(2);
    sys::dump[[usize]](vec.count());
    dump_elements[[u8]](&vec);
}
################################################################################
# 05 00 00 00 00 00 00 00
# AA
# BB
# CC
# DD
# EE
# 04 00 00 00 00 00 00 00
# AA
# BB
# CC
# DD
# 03 00 00 00 00 00 00 00
# AA
# BB
# DD
# 02 00 00 00 00 00 00 00
# BB
# DD
# panic: invalid index
