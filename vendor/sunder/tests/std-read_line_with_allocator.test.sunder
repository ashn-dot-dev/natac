import "std";

func test(allocator: std::allocator, str: []byte) void {
    var rstr = std::str_reader::init(str);
    var reader = std::reader::init[[typeof(rstr)]](&rstr);

    for true {
        var read_result = std::read_line_with_allocator(allocator, reader);
        var optional = read_result.value();
        if optional.is_empty() {
            break;
        }
        var bytes = optional.value();
        defer std::slice[[byte]]::delete_with_allocator(allocator, bytes);
        std::print_line(std::out(), bytes);
    }
}

func main() void {
    var allocator = std::general_allocator::init();
    defer allocator.fini();
    var allocator = std::allocator::init[[typeof(allocator)]](&allocator);

    test(allocator, "LINE 1\n");
    test(allocator, "LINE 1");
    test(allocator, "LINE 1\nLINE 2\n");
    test(allocator, "LINE 1\nLINE 2");
    test(allocator, "");
    test(allocator, "LINE 1\nLINE 2\nLINE 3\n");
}
################################################################################
# LINE 1
# LINE 1
# LINE 1
# LINE 2
# LINE 1
# LINE 2
# LINE 1
# LINE 2
# LINE 3
