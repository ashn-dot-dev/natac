import "std";

func main() void {
    var general_allocator = std::general_allocator::init();
    defer general_allocator.fini();
    var allocator = std::allocator::init[[std::general_allocator]](&general_allocator);

    var foo = std::new_with_allocator[[u16]](allocator);
    var bar = std::new_with_allocator[[u16]](allocator);
    var baz = std::new_with_allocator[[u16]](allocator);
    *foo = 123;
    *bar = 456;
    *baz = 789;

    var general_allocator_iterator = std::general_allocator_iterator::init(&general_allocator);
    var iter = std::iterator[[std::general_allocator_element]]::init[[std::general_allocator_iterator]](&general_allocator_iterator);
    for iter.advance() {
        std::print_format_line(
            std::out(),
            "{}",
            (:[]std::formatter)[
                std::formatter::init[[u16]]((:*u16)iter.current().*.start())]);
    }

    std::print_line(std::out(), "========");

    std::delete_with_allocator[[u16]](allocator, bar);
    bar = std::new_with_allocator[[u16]](allocator);
    *bar = 666;
    var general_allocator_iterator = std::general_allocator_iterator::init(&general_allocator);
    var iter = std::iterator[[std::general_allocator_element]]::init[[std::general_allocator_iterator]](&general_allocator_iterator);
    for iter.advance() {
        std::print_format_line(
            std::out(),
            "{}",
            (:[]std::formatter)[
                std::formatter::init[[u16]]((:*u16)iter.current().*.start())]);
    }
}
################################################################################
# 789
# 456
# 123
# ========
# 666
# 123
# 789
