import "sys";

let g_array: [3u]ssize = (:[3u]ssize)[1s, 3s, 5s];
let g_slice: []ssize = (:[]ssize){&g_array[1u], 2u};

let array_of_zero_sized_objects: [2u][0u]void =
    (:[2u][0u]void)[
        (:[0u]void)[],
        (:[0u]void)[]
    ];
let slice_of_zero_sized_objects: [][0u]void =
    (:[][0u]void){&array_of_zero_sized_objects[0u], 2u};

func main() void {
    sys::dump[[ssize]]((:[]ssize){&g_array[0u], 3u}[0u]);
    sys::dump[[ssize]]((:[]ssize){&g_array[0u], 3u}[1u]);
    sys::dump[[ssize]]((:[]ssize){&g_array[0u], 3u}[2u]);

    var slice: []ssize = (:[]ssize){&g_array[0u], 3u};
    sys::dump[[ssize]](slice[0u]);
    sys::dump[[ssize]](slice[1u]);
    sys::dump[[ssize]](slice[2u]);

    var ptr: *ssize = &slice[2u];
    sys::dump[[ssize]](*ptr);

    sys::dump[[ssize]](g_slice[0u]);
    sys::dump[[ssize]](g_slice[1u]);

    sys::dump[[[0]void]](slice_of_zero_sized_objects[0u]);
    sys::dump[[*[0]void]](&slice_of_zero_sized_objects[0u]);
}
################################################################################
# 01 00 00 00 00 00 00 00
# 03 00 00 00 00 00 00 00
# 05 00 00 00 00 00 00 00
# 01 00 00 00 00 00 00 00
# 03 00 00 00 00 00 00 00
# 05 00 00 00 00 00 00 00
# 05 00 00 00 00 00 00 00
# 03 00 00 00 00 00 00 00
# 05 00 00 00 00 00 00 00
#
# 00 00 00 00 00 00 00 00
